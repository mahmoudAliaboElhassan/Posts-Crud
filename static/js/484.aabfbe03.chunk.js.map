{"version":3,"file":"static/js/484.aabfbe03.chunk.js","mappings":"kLAaA,IATuB,SAACA,GACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAiCC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAA3DC,EAAOJ,EAAPI,QAASC,EAAKL,EAALK,MAAOC,EAAIN,EAAJM,KAIxB,OAHAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAQX,GACnB,GAAG,CAACC,EAAUD,IACP,CAAEO,QAAAA,EAASC,MAAAA,EAAOC,KAAAA,EAC3B,C,0IC+DA,EAnEgB,WAAO,IAADG,EACZC,GAAMC,EAAAA,EAAAA,MAAND,EACAb,GAAOe,EAAAA,EAAAA,MAAPf,GACRgB,GAAiCC,EAAAA,EAAAA,GAAejB,GAAxCO,EAAOS,EAAPT,QAASC,EAAKQ,EAALR,MAAOC,EAAIO,EAAJP,KAClBS,EAAO,CACXL,EAAE,UACFA,EAAE,UACFA,EAAE,WACFA,EAAE,aACFA,EAAE,YACFA,EAAE,UACFA,EAAE,aAiBJ,OACEM,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,EAAG,SAAUC,QAAS,GACjCC,QAAS,CAAEF,EAAG,EAAGC,QAAS,GAC1BE,WAAY,CAAEC,SAAU,OAAQC,UAEhCT,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CAACtB,QAASA,EAASC,MAAOA,EAAMoB,UACtCE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC7BE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYH,SAAA,EACzBT,EAAAA,EAAAA,KAAA,MAAAS,UACO,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,QACLvB,EAAKuB,MACFC,MAAM,KACNC,KAAI,SAACC,GAAI,OAAKA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAAE,IAC1DC,KAAK,QAEZT,EAAAA,EAAAA,MAAA,QAAAF,SAAA,CAAM,IAAEf,EAAM,OAAJJ,QAAI,IAAJA,GAAe,QAAXG,EAAJH,EAAM+B,iBAAS,IAAA5B,OAAX,EAAJA,EAAiB6B,OAAO,WAE/B,OAAJhC,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,OACLvB,EAAAA,EAAAA,KAAA,OAAKwB,IAAKlC,EAAKiC,IAAKE,IAAS,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,MAAOD,UAAU,oBAElDD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaH,SAAA,EAC1BT,EAAAA,EAAAA,KAAA,OAAKY,UAAU,uBAAsBH,UACnCT,EAAAA,EAAAA,KAAA,KAAAS,SAAQ,OAAJnB,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,iBAEP,OAAJpC,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,QACLhB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBH,SAAA,CACnCf,EAAE,QAAQ,MAAIK,EAAK,IAAI6B,KAAKtC,EAAKqC,MAAME,UACvC,MA1CI,SAACF,GAClB,IAAKA,EAAM,MAAO,GAUlB,OATsB,IAAIC,KAAKD,GASVG,wBAAmBC,EARxB,CACdC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGZ,CA+BeC,CAAWhD,EAAKqC,kBAQjC,C","sources":["hooks/use-post-details.jsx","pages/Details.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPost } from \"../RTK/Slices/PostSlice\";\r\n\r\nconst UsePostDetails = (id) => {\r\n  const dispatch = useDispatch();\r\n  const { loading, error, post } = useSelector((state) => state.posts);\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  }, [dispatch, id]);\r\n  return { loading, error, post };\r\n};\r\n\r\nexport default UsePostDetails;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport UsePostDetails from \"../hooks/use-post-details\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loading from \"../components/Loading\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./Details.css\";\r\nconst Details = () => {\r\n  const { t } = useTranslation();\r\n  const { id } = useParams();\r\n  const { loading, error, post } = UsePostDetails(id);\r\n  const days = [\r\n    t(\"Sunday\"),\r\n    t(\"Monday\"),\r\n    t(\"Tuesday\"),\r\n    t(\"Wednesday\"),\r\n    t(\"Thursday\"),\r\n    t(\"Friday\"),\r\n    t(\"Saturday\"),\r\n  ];\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return \"\";\r\n    const formattedDate = new Date(date);\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    };\r\n    return formattedDate.toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ x: \"-100vw\", opacity: 0 }}\r\n      animate={{ x: 0, opacity: 1 }}\r\n      transition={{ duration: \"0.3\" }}\r\n    >\r\n      <Loading loading={loading} error={error}>\r\n        <div className=\"container mb-1\">\r\n          <div className=\"title mb-1\">\r\n            <h1>\r\n              {post?.title &&\r\n                post.title\r\n                  .split(\" \")\r\n                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n                  .join(\" \")}\r\n            </h1>\r\n            <span>({t(post?.post_type?.label)})</span>\r\n          </div>\r\n          {post?.img && (\r\n            <img src={post.img} alt={post?.title} className=\"img-style mb-3\" />\r\n          )}\r\n          <div className=\"description\">\r\n            <div className=\"description-txt pb-1\">\r\n              <p>{post?.description}</p>\r\n            </div>\r\n            {post?.date && (\r\n              <div className=\"date-posted mt-3 mb-5\">\r\n                {t(\"date\")} : {days[new Date(post.date).getDay()]}\r\n                {\"   \"}\r\n                {formatDate(post.date)}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Loading>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"names":["id","dispatch","useDispatch","_useSelector","useSelector","state","posts","loading","error","post","useEffect","getPost","_post$post_type","t","useTranslation","useParams","_UsePostDetails","UsePostDetails","days","_jsx","motion","div","initial","x","opacity","animate","transition","duration","children","Loading","_jsxs","className","title","split","map","word","charAt","toUpperCase","slice","join","post_type","label","img","src","alt","description","date","Date","getDay","toLocaleDateString","undefined","year","month","day","hour","minute","second","formatDate"],"sourceRoot":""}